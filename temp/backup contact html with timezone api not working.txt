<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta charset="utf-8" />
    <title>Asia SGE | Your Trusted Partner in Worldwide Business Growth</title>
    <link rel="stylesheet" href="style.css" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        padding: 20px;
        background-color: #f8f9fa;
      }
    </style>
  </head>
  <body>
    <!-- load external header -->
    <div id="header"></div>

    <!-- page contents other than header and footer here -->
    <div class="container">
      <div class="appointment-card">
        <h1>Book an Appointment</h1>
        <h3>Ben Berenson</h3>
        <p>Introduction</p>
        <p>Duration: 30 min</p>
        <p>Web conferencing details provided upon confirmation.</p>

        <h4>Select a Date & Time</h4>

        <label for="appointment-date">Select Date:</label>
        <input
          type="text"
          id="appointment-date"
          class="form-control"
          placeholder="Select a date"
        />

        <label for="appointment-time" class="mt-3">Select Time:</label>
        <select id="appointment-time" class="form-control">
          <option value="">Select a time</option>
          <!-- Generate time slots -->
          <script>
            const timeSlots = [];
            for (let hour = 9; hour <= 17; hour++) {
              // 9 AM to 5 PM
              for (let minute = 0; minute < 60; minute += 30) {
                const time = `${hour}:${minute < 10 ? "0" : ""}${minute} ${
                  hour < 12 ? "AM" : "PM"
                }`;
                timeSlots.push(`<option value="${time}">${time}</option>`);
              }
            }
            document.write(timeSlots.join(""));
          </script>
        </select>

        <label for="timezone" class="mt-3">Select Time Zone:</label>
        <select id="timezone" class="form-control"></select>

        <a
          id="schedule-button"
          class="btn btn-primary mt-3"
          href="https://calendar.app.google/197gA31Aabkky8uq6"
          target="_blank"
          >Schedule Appointment</a
        >
      </div>
    </div>

    <div class="blank-padding-20"></div>

    <!--load external footer -->
    <div id="footer"></div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"></script>
    <script>
      // Load header
      fetch("header.html")
        .then((response) => response.text())
        .then((data) => {
          document.getElementById("header").innerHTML = data;

          // Attach event listeners
          $(".navbar-toggler").click(function () {
            $("#navbarDropdown").toggleClass("show");
          });

          $(".close-dropdown").click(function () {
            $("#navbarDropdown").removeClass("show");
          });
        });

      // Load footer
      fetch("footer.html")
        .then((response) => response.text())
        .then((data) => {
          document.getElementById("footer").innerHTML = data;
        });

      // Initialize flatpickr for the date input
      flatpickr("#appointment-date", {
        minDate: "today", // Start from today
        dateFormat: "Y-m-d", // Format for the date
      });

      // Fetch time zones dynamically
      $(document).ready(function () {
        $.get("http://worldtimeapi.org/api/timezone")
          .done(function (data) {
            const timezoneSelect = $("#timezone");
            if (data.length === 0) {
              console.error("No time zones retrieved.");
              alert("No time zones found. Please check the API.");
              return;
            }
            data.forEach(function (timezone) {
              timezoneSelect.append(
                `<option value="${timezone}">${timezone}</option>`
              );
            });
          })
          .fail(function (jqXHR, textStatus, errorThrown) {
            console.error(
              "Failed to load time zones:",
              textStatus,
              errorThrown
            );
            alert(
              "Failed to load time zones. Please check your internet connection and try again."
            );
          });
      });

      const scheduleButton = document.getElementById("schedule-button");

      // Function to create a Google Calendar link
      function createCalendarLink() {
        const title = "Appointment with Ben Berenson";
        const description =
          "Web conferencing details provided upon confirmation.";
        const dateInput = document.getElementById("appointment-date").value;
        const timeInput = document.getElementById("appointment-time").value;
        const timezone = document.getElementById("timezone").value;

        // Validate inputs
        if (!dateInput || !timeInput || !timezone) {
          alert("Please select date, time, and time zone.");
          return;
        }

        // Combine date and time properly
        const appointmentTime = moment(
          `${dateInput} ${timeInput}`,
          "YYYY-MM-DD hh:mm A"
        );

        if (!appointmentTime.isValid()) {
          alert(
            "The selected date and time are invalid. Please check your inputs."
          );
          return;
        }

        const startTime = appointmentTime.tz(timezone);
        const endTime = startTime.clone().add(30, "minutes"); // 30 minutes later

        // Format date and time for Google Calendar
        const start = startTime.format("YYYYMMDDTHHmm00");
        const end = endTime.format("YYYYMMDDTHHmm00");

        const calendarUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(
          title
        )}&details=${encodeURIComponent(
          description
        )}&dates=${start}/${end}&ctz=${timezone}`;
        scheduleButton.href = calendarUrl;
      }

      // Update the calendar link on button click
      scheduleButton.addEventListener("click", function (event) {
        event.preventDefault(); // Prevent default link behavior
        createCalendarLink(); // Create and set the calendar link
      });
    </script>
  </body>
</html>
